set nocompatible

if has("gui_running")
  set guioptions=aAc " no scrollbars
  set guioptions-=T
  set guifont=Monaco:h13
  set fuoptions=maxvert,maxhorz
  colorscheme billskog
  au GUIEnter * set fullscreen
endif

" http://vimcasts.org/episodes/show-invisibles/
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:»-,trail:·,extends:@,nbsp:≠
set list

map ö :

let mapleader = " "

nmap <Leader>t :CommandT<CR>
nmap <Leader>n :FufBuffer<CR>
nmap <Leader>m :L9GrepBufferAll/
nmap <Leader>b :b!#<CR>
let g:fuf_buffer_keyDelete = '<C-x>'
map <silent> å <C-]>
" map <silent> <leader><leader> :noh<CR>
map <silent> <leader>c :noh<CR>

" convert word into ruby symbol
imap <C-k> <C-o>b:<Esc>Ea
nmap <C-k> lbi:<Esc>E

"Disable arrow keys
"http://www.questionhub.com/SuperUser/210853
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>

" Quickfix navigation
map <silent> <Down> :cn<CR>zz
map <silent> <Up> :cp<CR>zz
map <silent> <Left> :copen<CR><C-w>J
map <silent> <Right> :cclose<CR>
map <silent> <C-Up> :cpf<CR>zz
map <silent> <C-Down> :cnf<CR>zz

" jannes macro för att peka ut fil och rad
nmap <Leader>l O<Esc>"%pA:<C-R>=line(".")<CR><Esc>0d$"_dd

" CommandT
let g:CommandTMaxHeight=20

"Shortcuts
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"Tabswitch shortcuts
map <silent> <D-A-Left> :tabprevious<CR>
map <silent> <D-A-Right> :tabnext<CR>
imap <silent> <D-A-Left> :tabprevious<CR>
imap <silent> <D-A-Right> :tabnext<CR>

" Nice tabs
if exists("+showtabline")
  function MyTabLine()
    let s = ''
    let t = tabpagenr()
    let i = 1
    while i <= tabpagenr('$')
      let buflist = tabpagebuflist(i)
      let winnr = tabpagewinnr(i)
      let s .= '%' . i . 'T'
      let s .= (i == t ? '%1*' : '%2*')
      let s .= (i == t ? '%#TabLineSel#' : '%#TabLine#')
      let file = bufname(buflist[winnr - 1])
      let file = fnamemodify(file, ':p:t')
      if file == ''
        let file = '<unsaved>'
      endif
      let s .= ' ' . file . ' '
      let s .= '%* '
      let i = i + 1
    endwhile
    let s .= '%T%#TabLineFill#%='
    return s
  endfunction
  set stal=1
  set tabline=%!MyTabLine()
endif

set showtabline=0
set hlsearch

au BufRead,BufNewFile *.html,*.erb,*.rhtml so ~/.vim/filetype/html.vim
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab

" Share clipboard
set clipboard=unnamed

" Word wrap
set wrap

" Load changes from external applications
set autoread

" Autosave on lost focus
autocmd FocusLost * silent! wall

" CommandTFlush
autocmd FocusGained * :CommandTFlush

" Auto remove fudgitive buffers
autocmd BufReadPost fugitive://* set bufhidden=delete

" Fudgitive goto parent directory
autocmd User fugitive
  \ if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' |
  \   nnoremap <buffer> .. :edit %:h<CR> |
  \ endif

" Rails config
autocmd User Rails set wildignore+=public/assets/**,vendor/**,log/**,tmp/**
autocmd User Rails map <silent> <Leader>w m`:%s/\s\+$//<CR>``
autocmd User Rails map <silent> <Leader>s :vsplit<CR>:A<CR>
autocmd User Rails map <silent> <Leader>d :q<CR>:vsplit<CR>:A<CR>
